<style type="text/css">
.nav-tabs > li.active > a{
    background-color: #eee;
}
</style>
<div class="tab-box">
    <div class="tab-content">
        <table class="table table-hover">
            <thead>
                <tr>
                    <th>权限</th>
                    {% for role in roles %}
                    <th data-id={{role.role}}>{{role.name}}</th>
                    {% endfor %}
                </tr>
            </thead>
            <tbody>
                {% for mod_class_key,mod_class_module_name in resource_class %}
                    <tr class="info">
                        <td>{{mod_class_module_name}}</td>
                    </tr>
                    {% for mod_key, mod_value in resource_module %}
                        {% for res in mod_value %}
                            {% if res.module_id == mod_class_key %}
                                <tr data-id={{res.rid}}>
                                    <td>
                                        {{res.description}}
                                    </td>
                                </tr>
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                {% endfor %}
            </tbody>
        </table>
        <button id="j-btn-save" class="btn btn-default btn-lg" type="button">保存修改</button>
    </div>
</div>
<script type="text/javascript" src="/js/jquery-1.8.3.min.js"></script>
<script type="text/javascript">

    $(function() {

        (function(){
            var identity = {
                init: function() {
                    var that = this;
                    var count = $('.table th').length;    //获取要循环的列数
                    $('.table tbody tr').each(function(index, ele) {
                        var id = $(this).attr('data-id');

                        for(var i = 1; i < count; i++) {
                            that._createNodes(id).appendTo($(this));
                        }
                    });

                    that._query();

                },
            //获取需要选中的项
                _query: function() {
                    var that = this;

                    $.get('/auth/has_been_auth').done(function(data) {
                        for(var attr in data) {
                            var index = $('th[data-id="'+ attr + '"]').index();  //用户在表格中的列号
                            that._alreadyChecked(index, data[attr]);
                        }
                    });
                },
                //生成表格中的input
                _createNodes: function(id) {
                    var $td = $('<td>', {'data-id': id});
                    var $input = $('<input/>', {'type': 'checkbox'});

                    $td.append($input);

                    return $td;
                },
                //标记已有的权限
                _alreadyChecked: function(pos, data) {
                    //第pos列 下的 tr的data-id = data
                    $.each(data, function(i, val) {
                        $('.table tbody tr[data-id="' + val + '"]').find('td').eq(pos)
                            .find('input').prop('checked', true);
                    });

                },
                multipleCheck: function($obj, index) {
                    var status = $obj.find('input').prop('checked');     //选中状态
                    var allChecks = $obj.parent('tr').nextUntil('.info')
                                .find('td:eq(' + index + ')').find('input');

                    allChecks.prop('checked', status);
                },
                getAllChecked: function() {
                    var json = {};
                    var len = $('table th[data-id]').length;
                    var length = $('table tbody tr:not(".info")').length;

                    for (var i = 0; i < len; i++) {     //第i列
                        var data = [];

                        for (var j = 0; j < length; j++) {  //第j行
                            var $obj = $('table tbody tr:not(".info")').eq(j).find('td:gt(0)').eq(i);
                            var status = $obj.children('input').prop('checked');

                            if (status) {
                                data.push($obj.attr('data-id'));
                            }
                        }

                        if(data.length) {
                            var id = $('table th[data-id]').eq(i).attr('data-id');
                            json[id] = data;

                        }
                    }

                    return json;
                }
            };
            //页面初始化
            identity.init();
            //批量选取
            $('.info').on('change', 'td', function() {
                var index = $(this).index();
                identity.multipleCheck($(this), index);

            });
            //保存
            var csrfToken = $('meta[name="csrf-token"]').attr("content");
            $('#j-btn-save').on('click', function() {

                var json = identity.getAllChecked();
                console.log(json);
                $.post('/auth/batch_auth',{result: json, _csrf: csrfToken});
            });
        })();
    });

</script>

